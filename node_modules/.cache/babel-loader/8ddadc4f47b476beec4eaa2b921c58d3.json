{"ast":null,"code":"import database from '../firebase/firebaseConfig';\nexport const addBlog = blog => ({\n  type: \"ADD_BLOG\",\n  blog\n});\nexport const addBlogToDatabase = (blogData = {}) => {\n  return dispatch => {\n    const {\n      title = '',\n      description = '',\n      dateAdded = 0\n    } = blogData;\n    const blog = {\n      title,\n      description,\n      dateAdded\n    };\n    database.ref(\"blogs\").push(blog).then(res => {\n      dispatch(addBlog({\n        id: res.key,\n        ...blog\n      }));\n    });\n  };\n};\nexport const removeBlog = id => ({\n  type: \"REMOVE_BLOG\",\n  id: id\n});\nexport const removeBlogFromDatabase = id => {\n  return dispatch => {\n    return database.ref(`blogs/${id}`).remove().then(() => {\n      dispatch(removeBlog(id));\n    });\n  };\n};\nexport const editBlog = (id, updates) => ({\n  type: \"EDIT_BLOG\",\n  id,\n  updates\n});\nexport const editBlogFromDatabase = (id, updates) => {\n  return dispatch => {\n    return database.ref(`blogs/${id}`).update(updates).then(() => {\n      dispatch(editBlog(id, updates));\n    });\n  };\n};\nexport const setBlogs = blogs => ({\n  type: \"SET_BLOGS\",\n  blogs\n});\nexport const getBlogsFromDatabase = () => {\n  return dispatch => {\n    return database.ref(\"blogs\").once(\"value\").then(snapshot => {\n      const blogs = [];\n      snapshot.forEach(blog => {\n        blogs.push({\n          id: blog.key,\n          ...blog.val()\n        });\n      });\n      dispatch(setBlogs(blogs));\n    });\n  };\n};","map":{"version":3,"names":["database","addBlog","blog","type","addBlogToDatabase","blogData","dispatch","title","description","dateAdded","ref","push","then","res","id","key","removeBlog","removeBlogFromDatabase","remove","editBlog","updates","editBlogFromDatabase","update","setBlogs","blogs","getBlogsFromDatabase","once","snapshot","forEach","val"],"sources":["C:/Users/hakoh/Desktop/blog-app/src/actions/blogs.js"],"sourcesContent":["import database from '../firebase/firebaseConfig';\n\nexport const addBlog = (blog) => ({\n    type: \"ADD_BLOG\",\n    blog\n})\n\nexport const addBlogToDatabase = (blogData = {}) => {\n    return (dispatch) => {\n        const { title='', description='',dateAdded=0 } = blogData;\n        const blog = {title,description,dateAdded};\n\n        database.ref(\"blogs\").push(blog).then((res) => {\n            dispatch(addBlog({\n                id: res.key,\n                ...blog\n            }))\n        })\n    }\n}\n\nexport const removeBlog = (id) => ({\n    type: \"REMOVE_BLOG\",\n    id: id\n});\n\nexport const removeBlogFromDatabase = (id) => {\n    return (dispatch) => {\n        return database.ref(`blogs/${id}`).remove().then(() => {\n            dispatch(removeBlog(id));\n        })\n    }   \n}\n\nexport const editBlog = (id,updates) => ({\n    type: \"EDIT_BLOG\",\n    id,\n    updates\n})\n\nexport const editBlogFromDatabase = (id, updates) => {\n    return (dispatch) => {\n        return database.ref(`blogs/${id}`).update(updates).then(() => {\n            dispatch(editBlog(id,updates));\n        })\n    }\n}\n\nexport const setBlogs = (blogs) => ({\n    type: \"SET_BLOGS\",\n    blogs\n})\n\nexport const getBlogsFromDatabase = () => {\n    return (dispatch) => {\n        return database.ref(\"blogs\").once(\"value\").then((snapshot) => {\n            const blogs = [];\n\n            snapshot.forEach((blog) => {\n                blogs.push({\n                    id: blog.key,\n                    ...blog.val()\n                })\n            })\n\n            dispatch(setBlogs(blogs));\n        })\n    }\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,4BAA4B;AAEjD,OAAO,MAAMC,OAAO,GAAIC,IAAI,KAAM;EAC9BC,IAAI,EAAE,UAAU;EAChBD;AACJ,CAAC,CAAC;AAEF,OAAO,MAAME,iBAAiB,GAAGA,CAACC,QAAQ,GAAG,CAAC,CAAC,KAAK;EAChD,OAAQC,QAAQ,IAAK;IACjB,MAAM;MAAEC,KAAK,GAAC,EAAE;MAAEC,WAAW,GAAC,EAAE;MAACC,SAAS,GAAC;IAAE,CAAC,GAAGJ,QAAQ;IACzD,MAAMH,IAAI,GAAG;MAACK,KAAK;MAACC,WAAW;MAACC;IAAS,CAAC;IAE1CT,QAAQ,CAACU,GAAG,CAAC,OAAO,CAAC,CAACC,IAAI,CAACT,IAAI,CAAC,CAACU,IAAI,CAAEC,GAAG,IAAK;MAC3CP,QAAQ,CAACL,OAAO,CAAC;QACba,EAAE,EAAED,GAAG,CAACE,GAAG;QACX,GAAGb;MACP,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,MAAMc,UAAU,GAAIF,EAAE,KAAM;EAC/BX,IAAI,EAAE,aAAa;EACnBW,EAAE,EAAEA;AACR,CAAC,CAAC;AAEF,OAAO,MAAMG,sBAAsB,GAAIH,EAAE,IAAK;EAC1C,OAAQR,QAAQ,IAAK;IACjB,OAAON,QAAQ,CAACU,GAAG,CAAC,SAASI,EAAE,EAAE,CAAC,CAACI,MAAM,CAAC,CAAC,CAACN,IAAI,CAAC,MAAM;MACnDN,QAAQ,CAACU,UAAU,CAACF,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAGA,CAACL,EAAE,EAACM,OAAO,MAAM;EACrCjB,IAAI,EAAE,WAAW;EACjBW,EAAE;EACFM;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,oBAAoB,GAAGA,CAACP,EAAE,EAAEM,OAAO,KAAK;EACjD,OAAQd,QAAQ,IAAK;IACjB,OAAON,QAAQ,CAACU,GAAG,CAAC,SAASI,EAAE,EAAE,CAAC,CAACQ,MAAM,CAACF,OAAO,CAAC,CAACR,IAAI,CAAC,MAAM;MAC1DN,QAAQ,CAACa,QAAQ,CAACL,EAAE,EAACM,OAAO,CAAC,CAAC;IAClC,CAAC,CAAC;EACN,CAAC;AACL,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAIC,KAAK,KAAM;EAChCrB,IAAI,EAAE,WAAW;EACjBqB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EACtC,OAAQnB,QAAQ,IAAK;IACjB,OAAON,QAAQ,CAACU,GAAG,CAAC,OAAO,CAAC,CAACgB,IAAI,CAAC,OAAO,CAAC,CAACd,IAAI,CAAEe,QAAQ,IAAK;MAC1D,MAAMH,KAAK,GAAG,EAAE;MAEhBG,QAAQ,CAACC,OAAO,CAAE1B,IAAI,IAAK;QACvBsB,KAAK,CAACb,IAAI,CAAC;UACPG,EAAE,EAAEZ,IAAI,CAACa,GAAG;UACZ,GAAGb,IAAI,CAAC2B,GAAG,CAAC;QAChB,CAAC,CAAC;MACN,CAAC,CAAC;MAEFvB,QAAQ,CAACiB,QAAQ,CAACC,KAAK,CAAC,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}